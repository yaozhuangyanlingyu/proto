<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/order/order.proto

namespace app\components\proto\order;

use UnexpectedValueException;

/**
 * Protobuf type <code>order.OrderType</code>
 */
class OrderType
{
    /**
     * 无
     *
     * Generated from protobuf enum <code>ORDER_TYPE_NON = 0;</code>
     */
    const ORDER_TYPE_NON = 0;
    /**
     * 全部订单
     *
     * Generated from protobuf enum <code>ORDER_TYPE_ALL = 1;</code>
     */
    const ORDER_TYPE_ALL = 1;
    /**
     * 普通订单
     *
     * Generated from protobuf enum <code>ORDER_TYPE_NORMAL = 2;</code>
     */
    const ORDER_TYPE_NORMAL = 2;
    /**
     * b2b订单
     *
     * Generated from protobuf enum <code>ORDER_TYPE_B2B = 3;</code>
     */
    const ORDER_TYPE_B2B = 3;

    private static $valueToName = [
        self::ORDER_TYPE_NON => 'ORDER_TYPE_NON',
        self::ORDER_TYPE_ALL => 'ORDER_TYPE_ALL',
        self::ORDER_TYPE_NORMAL => 'ORDER_TYPE_NORMAL',
        self::ORDER_TYPE_B2B => 'ORDER_TYPE_B2B',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

