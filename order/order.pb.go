// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.15.3
// source: proto/order/order.proto

package order

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// CreateType 创建订单类型
type CreateType int32

const (
	CreateType_Normal   CreateType = 0 // 正常订单
	CreateType_OverSale CreateType = 1 // 超售订单
)

// Enum value maps for CreateType.
var (
	CreateType_name = map[int32]string{
		0: "Normal",
		1: "OverSale",
	}
	CreateType_value = map[string]int32{
		"Normal":   0,
		"OverSale": 1,
	}
)

func (x CreateType) Enum() *CreateType {
	p := new(CreateType)
	*p = x
	return p
}

func (x CreateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_order_order_proto_enumTypes[0].Descriptor()
}

func (CreateType) Type() protoreflect.EnumType {
	return &file_proto_order_order_proto_enumTypes[0]
}

func (x CreateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateType.Descriptor instead.
func (CreateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{0}
}

type OrderType int32

const (
	OrderType_ORDER_TYPE_NON    OrderType = 0 // 无
	OrderType_ORDER_TYPE_ALL    OrderType = 1 // 全部订单
	OrderType_ORDER_TYPE_NORMAL OrderType = 2 // 普通订单
	OrderType_ORDER_TYPE_B2B    OrderType = 3 // b2b订单
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "ORDER_TYPE_NON",
		1: "ORDER_TYPE_ALL",
		2: "ORDER_TYPE_NORMAL",
		3: "ORDER_TYPE_B2B",
	}
	OrderType_value = map[string]int32{
		"ORDER_TYPE_NON":    0,
		"ORDER_TYPE_ALL":    1,
		"ORDER_TYPE_NORMAL": 2,
		"ORDER_TYPE_B2B":    3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_order_order_proto_enumTypes[1].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_proto_order_order_proto_enumTypes[1]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{1}
}

// CreateExternalOrderRequest 创建外部订单请求
type CreateExternalOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extend           string         `protobuf:"bytes,1,opt,name=extend,proto3" json:"extend,omitempty"`                                                   // 扩展信息
	Platform         string         `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`                                               // 外部订单平台(对应字段t_order.order_frontend)
	OperatorId       int64          `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`                        // 操作者ID
	CompanySubjectId int64          `protobuf:"varint,4,opt,name=company_subject_id,json=companySubjectId,proto3" json:"company_subject_id,omitempty"`    // 公司主体ID
	OutId            string         `protobuf:"bytes,5,opt,name=out_id,json=outId,proto3" json:"out_id,omitempty"`                                        // 外部订单号
	TransactionId    string         `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`                // 可选。外部交易号，目前订单平台为淘宝时必填。
	ReceiveInfo      *ReceiveInfo   `protobuf:"bytes,7,opt,name=receive_info,json=receiveInfo,proto3" json:"receive_info,omitempty"`                      // 收货信息
	ProductInfos     []*ProductInfo `protobuf:"bytes,8,rep,name=product_infos,json=productInfos,proto3" json:"product_infos,omitempty"`                   // 商品信息列表
	CreateType       CreateType     `protobuf:"varint,9,opt,name=create_type,json=createType,proto3,enum=order.CreateType" json:"create_type,omitempty"`  // 创建订单类型。0普通，1超售
	NotCheckLiveRoom bool           `protobuf:"varint,10,opt,name=not_check_live_room,json=notCheckLiveRoom,proto3" json:"not_check_live_room,omitempty"` // 可选值。false：默认校验直播房间；true：不校验直播房间。某些情况下开播异常导致匹配不到直播间商品
	ShipPrice        string         `protobuf:"bytes,11,opt,name=ship_price,json=shipPrice,proto3" json:"ship_price,omitempty"`                           // 可选值。订单运费。单位元，示例：123.01
	OperatorType     int32          `protobuf:"varint,12,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`                 // 操作者类型
}

func (x *CreateExternalOrderRequest) Reset() {
	*x = CreateExternalOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalOrderRequest) ProtoMessage() {}

func (x *CreateExternalOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateExternalOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *CreateExternalOrderRequest) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *CreateExternalOrderRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CreateExternalOrderRequest) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *CreateExternalOrderRequest) GetCompanySubjectId() int64 {
	if x != nil {
		return x.CompanySubjectId
	}
	return 0
}

func (x *CreateExternalOrderRequest) GetOutId() string {
	if x != nil {
		return x.OutId
	}
	return ""
}

func (x *CreateExternalOrderRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CreateExternalOrderRequest) GetReceiveInfo() *ReceiveInfo {
	if x != nil {
		return x.ReceiveInfo
	}
	return nil
}

func (x *CreateExternalOrderRequest) GetProductInfos() []*ProductInfo {
	if x != nil {
		return x.ProductInfos
	}
	return nil
}

func (x *CreateExternalOrderRequest) GetCreateType() CreateType {
	if x != nil {
		return x.CreateType
	}
	return CreateType_Normal
}

func (x *CreateExternalOrderRequest) GetNotCheckLiveRoom() bool {
	if x != nil {
		return x.NotCheckLiveRoom
	}
	return false
}

func (x *CreateExternalOrderRequest) GetShipPrice() string {
	if x != nil {
		return x.ShipPrice
	}
	return ""
}

func (x *CreateExternalOrderRequest) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

// ProductInfo 商品信息
type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          // 商品ID
	ActivityProductId int64  `protobuf:"varint,2,opt,name=activity_product_id,json=activityProductId,proto3" json:"activity_product_id,omitempty"` // 商品活动ID
	DiscountPrice     string `protobuf:"bytes,3,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`                // 商品折扣价。单位：元；格式：123.45
	RealPayPrice      string `protobuf:"bytes,4,opt,name=real_pay_price,json=realPayPrice,proto3" json:"real_pay_price,omitempty"`                 // 商品支付价。单位：元；格式：123.45
	GiftName          string `protobuf:"bytes,5,opt,name=gift_name,json=giftName,proto3" json:"gift_name,omitempty"`                               // 可选。赠品名称
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *ProductInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductInfo) GetActivityProductId() int64 {
	if x != nil {
		return x.ActivityProductId
	}
	return 0
}

func (x *ProductInfo) GetDiscountPrice() string {
	if x != nil {
		return x.DiscountPrice
	}
	return ""
}

func (x *ProductInfo) GetRealPayPrice() string {
	if x != nil {
		return x.RealPayPrice
	}
	return ""
}

func (x *ProductInfo) GetGiftName() string {
	if x != nil {
		return x.GiftName
	}
	return ""
}

// ReceiveInfo 收件信息
type ReceiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`    // 收货人姓名
	Phone     string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`                          // 联系电话
	Province  string `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`                    // 省
	City      string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`                            // 市
	Town      string `protobuf:"bytes,5,opt,name=town,proto3" json:"town,omitempty"`                            // 区
	Detail    string `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`                        // 详细地址
	ExpressNo string `protobuf:"bytes,8,opt,name=express_no,json=expressNo,proto3" json:"express_no,omitempty"` // 可选。快递单号
	// 以下四个字段最终保存到t_order_address中
	EncryptPostReceiver string `protobuf:"bytes,9,opt,name=encrypt_post_receiver,json=encryptPostReceiver,proto3" json:"encrypt_post_receiver,omitempty"` // 加密收货人
	EncryptPostTel      string `protobuf:"bytes,10,opt,name=encrypt_post_tel,json=encryptPostTel,proto3" json:"encrypt_post_tel,omitempty"`               // 加密手机号
	EncryptDetail       string `protobuf:"bytes,11,opt,name=encrypt_detail,json=encryptDetail,proto3" json:"encrypt_detail,omitempty"`                    // 加密详细地址
	PhoneKey            string `protobuf:"bytes,12,opt,name=phone_key,json=phoneKey,proto3" json:"phone_key,omitempty"`                                   // 抖音手机号索引串
}

func (x *ReceiveInfo) Reset() {
	*x = ReceiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveInfo) ProtoMessage() {}

func (x *ReceiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveInfo.ProtoReflect.Descriptor instead.
func (*ReceiveInfo) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *ReceiveInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ReceiveInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ReceiveInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *ReceiveInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ReceiveInfo) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *ReceiveInfo) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *ReceiveInfo) GetExpressNo() string {
	if x != nil {
		return x.ExpressNo
	}
	return ""
}

func (x *ReceiveInfo) GetEncryptPostReceiver() string {
	if x != nil {
		return x.EncryptPostReceiver
	}
	return ""
}

func (x *ReceiveInfo) GetEncryptPostTel() string {
	if x != nil {
		return x.EncryptPostTel
	}
	return ""
}

func (x *ReceiveInfo) GetEncryptDetail() string {
	if x != nil {
		return x.EncryptDetail
	}
	return ""
}

func (x *ReceiveInfo) GetPhoneKey() string {
	if x != nil {
		return x.PhoneKey
	}
	return ""
}

// CreateExternalOrderResponse 创建外场订单响应
type CreateExternalOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	OrderId int64  `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 红布林订单ID
}

func (x *CreateExternalOrderResponse) Reset() {
	*x = CreateExternalOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalOrderResponse) ProtoMessage() {}

func (x *CreateExternalOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateExternalOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{3}
}

func (x *CreateExternalOrderResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateExternalOrderResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateExternalOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

// CancelOrderRequest 取消订单请求
type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extend     string `protobuf:"bytes,1,opt,name=extend,proto3" json:"extend,omitempty"`                            // 扩展信息（预留）
	Source     string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`                            // 订单来源。内部、外部。TODO: 枚举值
	OperatorId int64  `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"` // 操作者ID（用户ID或者后台ID）
	OrderId    int64  `protobuf:"varint,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`          // 订单ID
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{4}
}

func (x *CancelOrderRequest) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *CancelOrderRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CancelOrderRequest) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *CancelOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

// CancelOrderResponse 取消订单响应
type CancelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CancelOrderResponse) Reset() {
	*x = CancelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderResponse) ProtoMessage() {}

func (x *CancelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderResponse.ProtoReflect.Descriptor instead.
func (*CancelOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{5}
}

func (x *CancelOrderResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CancelOrderResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type OrderSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32     `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size      int32     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	UserId    int32     `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                               // 用户ID
	Keyword   string    `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`                                            //搜索关键词
	OrderType OrderType `protobuf:"varint,5,opt,name=order_type,json=orderType,proto3,enum=order.OrderType" json:"order_type,omitempty"` // 订单类型
}

func (x *OrderSearchRequest) Reset() {
	*x = OrderSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSearchRequest) ProtoMessage() {}

func (x *OrderSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSearchRequest.ProtoReflect.Descriptor instead.
func (*OrderSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{6}
}

func (x *OrderSearchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OrderSearchRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OrderSearchRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderSearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *OrderSearchRequest) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_TYPE_NON
}

type OrderSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	OrderId []int32 `protobuf:"varint,3,rep,packed,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *OrderSearchResponse) Reset() {
	*x = OrderSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSearchResponse) ProtoMessage() {}

func (x *OrderSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSearchResponse.ProtoReflect.Descriptor instead.
func (*OrderSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{7}
}

func (x *OrderSearchResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderSearchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderSearchResponse) GetOrderId() []int32 {
	if x != nil {
		return x.OrderId
	}
	return nil
}

// SvoucherExpireTimeRequest 获取佣金劵过期时间-请求参数
type SvoucherExpireTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserVoucherIds []int64 `protobuf:"varint,1,rep,packed,name=user_voucher_ids,json=userVoucherIds,proto3" json:"user_voucher_ids,omitempty"` // 用户优惠券ID
	CacheTime      int64   `protobuf:"varint,2,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`                         // 缓存时间，默认不缓存(非必传)
	BusinessModule string  `protobuf:"bytes,3,opt,name=business_module,json=businessModule,proto3" json:"business_module,omitempty"`           // 业务模块：www、mis、zzapi(非必传)
}

func (x *SvoucherExpireTimeRequest) Reset() {
	*x = SvoucherExpireTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvoucherExpireTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvoucherExpireTimeRequest) ProtoMessage() {}

func (x *SvoucherExpireTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvoucherExpireTimeRequest.ProtoReflect.Descriptor instead.
func (*SvoucherExpireTimeRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{8}
}

func (x *SvoucherExpireTimeRequest) GetUserVoucherIds() []int64 {
	if x != nil {
		return x.UserVoucherIds
	}
	return nil
}

func (x *SvoucherExpireTimeRequest) GetCacheTime() int64 {
	if x != nil {
		return x.CacheTime
	}
	return 0
}

func (x *SvoucherExpireTimeRequest) GetBusinessModule() string {
	if x != nil {
		return x.BusinessModule
	}
	return ""
}

type SvoucherExpireTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*SvoucherExpireTimeResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SvoucherExpireTimeResponse) Reset() {
	*x = SvoucherExpireTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvoucherExpireTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvoucherExpireTimeResponse) ProtoMessage() {}

func (x *SvoucherExpireTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvoucherExpireTimeResponse.ProtoReflect.Descriptor instead.
func (*SvoucherExpireTimeResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{9}
}

func (x *SvoucherExpireTimeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SvoucherExpireTimeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SvoucherExpireTimeResponse) GetData() []*SvoucherExpireTimeResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SvoucherExpireTimeResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserVoucherId        int64  `protobuf:"varint,1,opt,name=user_voucher_id,json=userVoucherId,proto3" json:"user_voucher_id,omitempty"`                      // 用户优惠券ID
	SoldDays             int64  `protobuf:"varint,2,opt,name=sold_days,json=soldDays,proto3" json:"sold_days,omitempty"`                                       // 绑劵后过期天数(原始值)
	OnSaleDays           int64  `protobuf:"varint,3,opt,name=on_sale_days,json=onSaleDays,proto3" json:"on_sale_days,omitempty"`                               // 在售天数
	CommitTime           int64  `protobuf:"varint,4,opt,name=commit_time,json=commitTime,proto3" json:"commit_time,omitempty"`                                 // 提交商品日期
	MailTime             int64  `protobuf:"varint,5,opt,name=mail_time,json=mailTime,proto3" json:"mail_time,omitempty"`                                       // 寄出商品日期
	StartTime            int64  `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                    // 快要过期的起始计算时间(有订单则是下单时间，没有则是当前时间)
	CouponRedemptionTime int64  `protobuf:"varint,7,opt,name=coupon_redemption_time,json=couponRedemptionTime,proto3" json:"coupon_redemption_time,omitempty"` // 领劵日期
	CalcExpireTime       int64  `protobuf:"varint,8,opt,name=calc_expire_time,json=calcExpireTime,proto3" json:"calc_expire_time,omitempty"`                   // 佣金劵过期剩余天数(以该值为准，该字段用于计算，其他字段均用来展示)
	CalcExpireDate       string `protobuf:"bytes,9,opt,name=calc_expire_date,json=calcExpireDate,proto3" json:"calc_expire_date,omitempty"`                    // 佣金劵过期日期，格式：YYYY-mm-dd H:i:s
}

func (x *SvoucherExpireTimeResponseData) Reset() {
	*x = SvoucherExpireTimeResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvoucherExpireTimeResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvoucherExpireTimeResponseData) ProtoMessage() {}

func (x *SvoucherExpireTimeResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvoucherExpireTimeResponseData.ProtoReflect.Descriptor instead.
func (*SvoucherExpireTimeResponseData) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{10}
}

func (x *SvoucherExpireTimeResponseData) GetUserVoucherId() int64 {
	if x != nil {
		return x.UserVoucherId
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetSoldDays() int64 {
	if x != nil {
		return x.SoldDays
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetOnSaleDays() int64 {
	if x != nil {
		return x.OnSaleDays
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetCommitTime() int64 {
	if x != nil {
		return x.CommitTime
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetMailTime() int64 {
	if x != nil {
		return x.MailTime
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetCouponRedemptionTime() int64 {
	if x != nil {
		return x.CouponRedemptionTime
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetCalcExpireTime() int64 {
	if x != nil {
		return x.CalcExpireTime
	}
	return 0
}

func (x *SvoucherExpireTimeResponseData) GetCalcExpireDate() string {
	if x != nil {
		return x.CalcExpireDate
	}
	return ""
}

//*
// 计算结算佣金
// @desc 该接口只负责计算，没有写操作，支持批量；
// @desc 注意字段命名，最好与t_order_item表一致，属性值最好都复制表属性；
type CalcSettlePriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqOitemAttrs  []*CalcSettlePriceReqOitemAttr `protobuf:"bytes,1,rep,name=req_oitem_attrs,json=reqOitemAttrs,proto3" json:"req_oitem_attrs,omitempty"`  // 订单商品信息
	BusinessModule string                         `protobuf:"bytes,2,opt,name=business_module,json=businessModule,proto3" json:"business_module,omitempty"` // 业务模块：www、mis(非必传)
}

func (x *CalcSettlePriceRequest) Reset() {
	*x = CalcSettlePriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcSettlePriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcSettlePriceRequest) ProtoMessage() {}

func (x *CalcSettlePriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcSettlePriceRequest.ProtoReflect.Descriptor instead.
func (*CalcSettlePriceRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{11}
}

func (x *CalcSettlePriceRequest) GetReqOitemAttrs() []*CalcSettlePriceReqOitemAttr {
	if x != nil {
		return x.ReqOitemAttrs
	}
	return nil
}

func (x *CalcSettlePriceRequest) GetBusinessModule() string {
	if x != nil {
		return x.BusinessModule
	}
	return ""
}

type CalcSettlePriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int64                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RspOitemAttrs []*CalcSettlePriceRspOitemAttr `protobuf:"bytes,3,rep,name=rsp_oitem_attrs,json=rspOitemAttrs,proto3" json:"rsp_oitem_attrs,omitempty"` // 订单商品信息
}

func (x *CalcSettlePriceResponse) Reset() {
	*x = CalcSettlePriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcSettlePriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcSettlePriceResponse) ProtoMessage() {}

func (x *CalcSettlePriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcSettlePriceResponse.ProtoReflect.Descriptor instead.
func (*CalcSettlePriceResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{12}
}

func (x *CalcSettlePriceResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CalcSettlePriceResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CalcSettlePriceResponse) GetRspOitemAttrs() []*CalcSettlePriceRspOitemAttr {
	if x != nil {
		return x.RspOitemAttrs
	}
	return nil
}

type CalcSettlePriceReqOitemAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                     // 订单商品表ID
	OrderId         int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                            // 订单ID
	ProductId       int64  `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                      // 老品商品ID
	SpuId           int64  `protobuf:"varint,4,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`                                  // 新品spu_id
	SkuId           int64  `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                                  // 新品sku_id
	DiscountPrice   string `protobuf:"bytes,6,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`           // 折扣价格
	RealpayPrice    string `protobuf:"bytes,7,opt,name=realpay_price,json=realpayPrice,proto3" json:"realpay_price,omitempty"`              // 商品支付金额
	SettleBasePrice string `protobuf:"bytes,8,opt,name=settle_base_price,json=settleBasePrice,proto3" json:"settle_base_price,omitempty"`   // 结算基础价（除了平台定价依赖www，其他定价类型，该值可以为0）
	FulloffBenefit  string `protobuf:"bytes,9,opt,name=fulloff_benefit,json=fulloffBenefit,proto3" json:"fulloff_benefit,omitempty"`        // 满减优惠金额（非必填）
	FurtherDiscount string `protobuf:"bytes,10,opt,name=further_discount,json=furtherDiscount,proto3" json:"further_discount,omitempty"`    // 满折优惠金额（非必填）
	CommissionTplId int64  `protobuf:"varint,11,opt,name=commission_tpl_id,json=commissionTplId,proto3" json:"commission_tpl_id,omitempty"` // 绑定过的模板（非必填）
	ActivityJson    string `protobuf:"bytes,12,opt,name=activity_json,json=activityJson,proto3" json:"activity_json,omitempty"`             // 下单时商品参加的活动信息，仅用来记录（非必填）
}

func (x *CalcSettlePriceReqOitemAttr) Reset() {
	*x = CalcSettlePriceReqOitemAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcSettlePriceReqOitemAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcSettlePriceReqOitemAttr) ProtoMessage() {}

func (x *CalcSettlePriceReqOitemAttr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcSettlePriceReqOitemAttr.ProtoReflect.Descriptor instead.
func (*CalcSettlePriceReqOitemAttr) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{13}
}

func (x *CalcSettlePriceReqOitemAttr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CalcSettlePriceReqOitemAttr) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CalcSettlePriceReqOitemAttr) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CalcSettlePriceReqOitemAttr) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *CalcSettlePriceReqOitemAttr) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CalcSettlePriceReqOitemAttr) GetDiscountPrice() string {
	if x != nil {
		return x.DiscountPrice
	}
	return ""
}

func (x *CalcSettlePriceReqOitemAttr) GetRealpayPrice() string {
	if x != nil {
		return x.RealpayPrice
	}
	return ""
}

func (x *CalcSettlePriceReqOitemAttr) GetSettleBasePrice() string {
	if x != nil {
		return x.SettleBasePrice
	}
	return ""
}

func (x *CalcSettlePriceReqOitemAttr) GetFulloffBenefit() string {
	if x != nil {
		return x.FulloffBenefit
	}
	return ""
}

func (x *CalcSettlePriceReqOitemAttr) GetFurtherDiscount() string {
	if x != nil {
		return x.FurtherDiscount
	}
	return ""
}

func (x *CalcSettlePriceReqOitemAttr) GetCommissionTplId() int64 {
	if x != nil {
		return x.CommissionTplId
	}
	return 0
}

func (x *CalcSettlePriceReqOitemAttr) GetActivityJson() string {
	if x != nil {
		return x.ActivityJson
	}
	return ""
}

type CalcSettlePriceRspOitemAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                // 订单商品ID
	CommissionTplId          int64                `protobuf:"varint,2,opt,name=commission_tpl_id,json=commissionTplId,proto3" json:"commission_tpl_id,omitempty"`                             // 绑定的模板ID
	SettleBasePrice          string               `protobuf:"bytes,3,opt,name=settle_base_price,json=settleBasePrice,proto3" json:"settle_base_price,omitempty"`                              // 修改后的结算基础价
	SellerVoucherApplyingFee string               `protobuf:"bytes,4,opt,name=seller_voucher_applying_fee,json=sellerVoucherApplyingFee,proto3" json:"seller_voucher_applying_fee,omitempty"` // 优惠券提报活动优惠金额
	SVoucherCommission       string               `protobuf:"bytes,5,opt,name=s_voucher_commission,json=sVoucherCommission,proto3" json:"s_voucher_commission,omitempty"`                     // 佣金劵抵扣的金额
	CommissionFee            string               `protobuf:"bytes,6,opt,name=commission_fee,json=commissionFee,proto3" json:"commission_fee,omitempty"`                                      // 平台收取佣金金额
	SettleCommissionRatio    string               `protobuf:"bytes,7,opt,name=settle_commission_ratio,json=settleCommissionRatio,proto3" json:"settle_commission_ratio,omitempty"`            // 佣金费率
	DeductionAppraisalFee    string               `protobuf:"bytes,8,opt,name=deduction_appraisal_fee,json=deductionAppraisalFee,proto3" json:"deduction_appraisal_fee,omitempty"`            // 鉴定费金额
	DeductionTransferFee     string               `protobuf:"bytes,9,opt,name=deduction_transfer_fee,json=deductionTransferFee,proto3" json:"deduction_transfer_fee,omitempty"`               // 转账手续费金额
	SettlePrice              string               `protobuf:"bytes,10,opt,name=settle_price,json=settlePrice,proto3" json:"settle_price,omitempty"`                                           // 结算给卖家的金额
	ProductId                int64                `protobuf:"varint,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                                                // 商品ID
	SpuId                    int64                `protobuf:"varint,12,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`                                                            // spuID
	SkuId                    int64                `protobuf:"varint,13,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                                                            // skuID
	Tpl                      *TOrderCommissionTpl `protobuf:"bytes,14,opt,name=tpl,proto3" json:"tpl,omitempty"`                                                                              // 佣金模板数据
}

func (x *CalcSettlePriceRspOitemAttr) Reset() {
	*x = CalcSettlePriceRspOitemAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcSettlePriceRspOitemAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcSettlePriceRspOitemAttr) ProtoMessage() {}

func (x *CalcSettlePriceRspOitemAttr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcSettlePriceRspOitemAttr.ProtoReflect.Descriptor instead.
func (*CalcSettlePriceRspOitemAttr) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{14}
}

func (x *CalcSettlePriceRspOitemAttr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CalcSettlePriceRspOitemAttr) GetCommissionTplId() int64 {
	if x != nil {
		return x.CommissionTplId
	}
	return 0
}

func (x *CalcSettlePriceRspOitemAttr) GetSettleBasePrice() string {
	if x != nil {
		return x.SettleBasePrice
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetSellerVoucherApplyingFee() string {
	if x != nil {
		return x.SellerVoucherApplyingFee
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetSVoucherCommission() string {
	if x != nil {
		return x.SVoucherCommission
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetCommissionFee() string {
	if x != nil {
		return x.CommissionFee
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetSettleCommissionRatio() string {
	if x != nil {
		return x.SettleCommissionRatio
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetDeductionAppraisalFee() string {
	if x != nil {
		return x.DeductionAppraisalFee
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetDeductionTransferFee() string {
	if x != nil {
		return x.DeductionTransferFee
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetSettlePrice() string {
	if x != nil {
		return x.SettlePrice
	}
	return ""
}

func (x *CalcSettlePriceRspOitemAttr) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CalcSettlePriceRspOitemAttr) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *CalcSettlePriceRspOitemAttr) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CalcSettlePriceRspOitemAttr) GetTpl() *TOrderCommissionTpl {
	if x != nil {
		return x.Tpl
	}
	return nil
}

// MqNoticeRequest 消息回调参数
type MqNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgJson string `protobuf:"bytes,1,opt,name=msg_json,json=msgJson,proto3" json:"msg_json,omitempty"` // 消息json格式
}

func (x *MqNoticeRequest) Reset() {
	*x = MqNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MqNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MqNoticeRequest) ProtoMessage() {}

func (x *MqNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MqNoticeRequest.ProtoReflect.Descriptor instead.
func (*MqNoticeRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{15}
}

func (x *MqNoticeRequest) GetMsgJson() string {
	if x != nil {
		return x.MsgJson
	}
	return ""
}

// MqNoticeResponse 消息回答响应
type MqNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Success []string `protobuf:"bytes,3,rep,name=success,proto3" json:"success,omitempty"`
}

func (x *MqNoticeResponse) Reset() {
	*x = MqNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MqNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MqNoticeResponse) ProtoMessage() {}

func (x *MqNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MqNoticeResponse.ProtoReflect.Descriptor instead.
func (*MqNoticeResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{16}
}

func (x *MqNoticeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MqNoticeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MqNoticeResponse) GetSuccess() []string {
	if x != nil {
		return x.Success
	}
	return nil
}

// 提交商品前，根据条件匹配佣金模板
type GetCommissionTplRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId           int64  `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`                                 // 品牌ID
	CategoryId        int64  `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`                        // 类目ID
	SellerId          int64  `protobuf:"varint,3,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`                              // 卖家ID
	ProductCommitTime int64  `protobuf:"varint,4,opt,name=product_commit_time,json=productCommitTime,proto3" json:"product_commit_time,omitempty"` // 卖家商品创建时间(非必填)
	DispatchType      string `protobuf:"bytes,5,opt,name=dispatch_type,json=dispatchType,proto3" json:"dispatch_type,omitempty"`                   // 寄卖方式：plum入仓模式、seller挂售(非必填)
	ProductId         int64  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                           // 商品ID(非必填)
}

func (x *GetCommissionTplRequest) Reset() {
	*x = GetCommissionTplRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionTplRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionTplRequest) ProtoMessage() {}

func (x *GetCommissionTplRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionTplRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionTplRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{17}
}

func (x *GetCommissionTplRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *GetCommissionTplRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetCommissionTplRequest) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *GetCommissionTplRequest) GetProductCommitTime() int64 {
	if x != nil {
		return x.ProductCommitTime
	}
	return 0
}

func (x *GetCommissionTplRequest) GetDispatchType() string {
	if x != nil {
		return x.DispatchType
	}
	return ""
}

func (x *GetCommissionTplRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type GetCommissionTplResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int64                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg        string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Tpl        *TOrderCommissionTpl `protobuf:"bytes,3,opt,name=tpl,proto3" json:"tpl,omitempty"`                                 // 模板信息
	DefaultTpl *TOrderCommissionTpl `protobuf:"bytes,4,opt,name=default_tpl,json=defaultTpl,proto3" json:"default_tpl,omitempty"` // 匹配不到模板时，使用的参数
}

func (x *GetCommissionTplResponse) Reset() {
	*x = GetCommissionTplResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionTplResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionTplResponse) ProtoMessage() {}

func (x *GetCommissionTplResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionTplResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionTplResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{18}
}

func (x *GetCommissionTplResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCommissionTplResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCommissionTplResponse) GetTpl() *TOrderCommissionTpl {
	if x != nil {
		return x.Tpl
	}
	return nil
}

func (x *GetCommissionTplResponse) GetDefaultTpl() *TOrderCommissionTpl {
	if x != nil {
		return x.DefaultTpl
	}
	return nil
}

// 获取商品ID，获取对应的佣金模板
type GetCommissionTplByPidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pids []int64 `protobuf:"varint,1,rep,packed,name=pids,proto3" json:"pids,omitempty"` // 商品ID
}

func (x *GetCommissionTplByPidRequest) Reset() {
	*x = GetCommissionTplByPidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionTplByPidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionTplByPidRequest) ProtoMessage() {}

func (x *GetCommissionTplByPidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionTplByPidRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionTplByPidRequest) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{19}
}

func (x *GetCommissionTplByPidRequest) GetPids() []int64 {
	if x != nil {
		return x.Pids
	}
	return nil
}

type GetCommissionTplByPidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*GetCommissionTplByPidRow `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetCommissionTplByPidResponse) Reset() {
	*x = GetCommissionTplByPidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionTplByPidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionTplByPidResponse) ProtoMessage() {}

func (x *GetCommissionTplByPidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionTplByPidResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionTplByPidResponse) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{20}
}

func (x *GetCommissionTplByPidResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCommissionTplByPidResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCommissionTplByPidResponse) GetList() []*GetCommissionTplByPidRow {
	if x != nil {
		return x.List
	}
	return nil
}

type GetCommissionTplByPidRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64                `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"` // 商品ID
	Tpl *TOrderCommissionTpl `protobuf:"bytes,2,opt,name=tpl,proto3" json:"tpl,omitempty"`  // 模板信息
}

func (x *GetCommissionTplByPidRow) Reset() {
	*x = GetCommissionTplByPidRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionTplByPidRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionTplByPidRow) ProtoMessage() {}

func (x *GetCommissionTplByPidRow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionTplByPidRow.ProtoReflect.Descriptor instead.
func (*GetCommissionTplByPidRow) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{21}
}

func (x *GetCommissionTplByPidRow) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GetCommissionTplByPidRow) GetTpl() *TOrderCommissionTpl {
	if x != nil {
		return x.Tpl
	}
	return nil
}

type TOrderCommissionTpl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TplName          string  `protobuf:"bytes,2,opt,name=tpl_name,json=tplName,proto3" json:"tpl_name,omitempty"`
	PlatformRatio    float32 `protobuf:"fixed32,3,opt,name=platform_ratio,json=platformRatio,proto3" json:"platform_ratio,omitempty"`
	MinFee           float32 `protobuf:"fixed32,4,opt,name=min_fee,json=minFee,proto3" json:"min_fee,omitempty"`
	MinFeeStime      int32   `protobuf:"varint,5,opt,name=min_fee_stime,json=minFeeStime,proto3" json:"min_fee_stime,omitempty"`
	MaxFee           float32 `protobuf:"fixed32,6,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	MaxFeeStime      int32   `protobuf:"varint,7,opt,name=max_fee_stime,json=maxFeeStime,proto3" json:"max_fee_stime,omitempty"`
	TransferFeeRatio float32 `protobuf:"fixed32,8,opt,name=transfer_fee_ratio,json=transferFeeRatio,proto3" json:"transfer_fee_ratio,omitempty"`
	AppraisalFee     float32 `protobuf:"fixed32,9,opt,name=appraisal_fee,json=appraisalFee,proto3" json:"appraisal_fee,omitempty"`
	TplStime         int32   `protobuf:"varint,10,opt,name=tpl_stime,json=tplStime,proto3" json:"tpl_stime,omitempty"`
	TplEtime         int32   `protobuf:"varint,11,opt,name=tpl_etime,json=tplEtime,proto3" json:"tpl_etime,omitempty"`
	Remark           string  `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime       int32   `protobuf:"varint,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	BrandList        string  `protobuf:"bytes,14,opt,name=brand_list,json=brandList,proto3" json:"brand_list,omitempty"`
	CategoryList     string  `protobuf:"bytes,15,opt,name=category_list,json=categoryList,proto3" json:"category_list,omitempty"`
	SellerIdList     string  `protobuf:"bytes,16,opt,name=seller_id_list,json=sellerIdList,proto3" json:"seller_id_list,omitempty"`
	ProductIdList    string  `protobuf:"bytes,17,opt,name=product_id_list,json=productIdList,proto3" json:"product_id_list,omitempty"`
	DispatchType     string  `protobuf:"bytes,18,opt,name=dispatch_type,json=dispatchType,proto3" json:"dispatch_type,omitempty"`
	LowSellingPrice  float32 `protobuf:"fixed32,19,opt,name=low_selling_price,json=lowSellingPrice,proto3" json:"low_selling_price,omitempty"`
	LowResellerPrice float32 `protobuf:"fixed32,20,opt,name=low_reseller_price,json=lowResellerPrice,proto3" json:"low_reseller_price,omitempty"`
	Level            int32   `protobuf:"varint,21,opt,name=level,proto3" json:"level,omitempty"`
	GId              int32   `protobuf:"varint,22,opt,name=g_id,json=gId,proto3" json:"g_id,omitempty"`
	GStatus          string  `protobuf:"bytes,23,opt,name=g_status,json=gStatus,proto3" json:"g_status,omitempty"`
	GImage           string  `protobuf:"bytes,24,opt,name=g_image,json=gImage,proto3" json:"g_image,omitempty"`
}

func (x *TOrderCommissionTpl) Reset() {
	*x = TOrderCommissionTpl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_order_order_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TOrderCommissionTpl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TOrderCommissionTpl) ProtoMessage() {}

func (x *TOrderCommissionTpl) ProtoReflect() protoreflect.Message {
	mi := &file_proto_order_order_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TOrderCommissionTpl.ProtoReflect.Descriptor instead.
func (*TOrderCommissionTpl) Descriptor() ([]byte, []int) {
	return file_proto_order_order_proto_rawDescGZIP(), []int{22}
}

func (x *TOrderCommissionTpl) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TOrderCommissionTpl) GetTplName() string {
	if x != nil {
		return x.TplName
	}
	return ""
}

func (x *TOrderCommissionTpl) GetPlatformRatio() float32 {
	if x != nil {
		return x.PlatformRatio
	}
	return 0
}

func (x *TOrderCommissionTpl) GetMinFee() float32 {
	if x != nil {
		return x.MinFee
	}
	return 0
}

func (x *TOrderCommissionTpl) GetMinFeeStime() int32 {
	if x != nil {
		return x.MinFeeStime
	}
	return 0
}

func (x *TOrderCommissionTpl) GetMaxFee() float32 {
	if x != nil {
		return x.MaxFee
	}
	return 0
}

func (x *TOrderCommissionTpl) GetMaxFeeStime() int32 {
	if x != nil {
		return x.MaxFeeStime
	}
	return 0
}

func (x *TOrderCommissionTpl) GetTransferFeeRatio() float32 {
	if x != nil {
		return x.TransferFeeRatio
	}
	return 0
}

func (x *TOrderCommissionTpl) GetAppraisalFee() float32 {
	if x != nil {
		return x.AppraisalFee
	}
	return 0
}

func (x *TOrderCommissionTpl) GetTplStime() int32 {
	if x != nil {
		return x.TplStime
	}
	return 0
}

func (x *TOrderCommissionTpl) GetTplEtime() int32 {
	if x != nil {
		return x.TplEtime
	}
	return 0
}

func (x *TOrderCommissionTpl) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TOrderCommissionTpl) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *TOrderCommissionTpl) GetBrandList() string {
	if x != nil {
		return x.BrandList
	}
	return ""
}

func (x *TOrderCommissionTpl) GetCategoryList() string {
	if x != nil {
		return x.CategoryList
	}
	return ""
}

func (x *TOrderCommissionTpl) GetSellerIdList() string {
	if x != nil {
		return x.SellerIdList
	}
	return ""
}

func (x *TOrderCommissionTpl) GetProductIdList() string {
	if x != nil {
		return x.ProductIdList
	}
	return ""
}

func (x *TOrderCommissionTpl) GetDispatchType() string {
	if x != nil {
		return x.DispatchType
	}
	return ""
}

func (x *TOrderCommissionTpl) GetLowSellingPrice() float32 {
	if x != nil {
		return x.LowSellingPrice
	}
	return 0
}

func (x *TOrderCommissionTpl) GetLowResellerPrice() float32 {
	if x != nil {
		return x.LowResellerPrice
	}
	return 0
}

func (x *TOrderCommissionTpl) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TOrderCommissionTpl) GetGId() int32 {
	if x != nil {
		return x.GId
	}
	return 0
}

func (x *TOrderCommissionTpl) GetGStatus() string {
	if x != nil {
		return x.GStatus
	}
	return ""
}

func (x *TOrderCommissionTpl) GetGImage() string {
	if x != nil {
		return x.GImage
	}
	return ""
}

var File_proto_order_order_proto protoreflect.FileDescriptor

var file_proto_order_order_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0xf4, 0x03, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xdd, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x12,
	0x32, 0x0a, 0x15, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4b, 0x65,
	0x79, 0x22, 0x5e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x80, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a,
	0x19, 0x53, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x7d, 0x0a, 0x1a,
	0x53, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xee, 0x02, 0x0a, 0x1e,
	0x53, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26,
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x56, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x6c, 0x64, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x6c, 0x64, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6e, 0x53, 0x61, 0x6c,
	0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x63,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x6c, 0x63, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61,
	0x6c, 0x63, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x8d, 0x01, 0x0a,
	0x16, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x5f, 0x6f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x4f, 0x69, 0x74, 0x65, 0x6d,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x4f, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x8b, 0x01, 0x0a,
	0x17, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4a,
	0x0a, 0x0f, 0x72, 0x73, 0x70, 0x5f, 0x6f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x73, 0x70, 0x4f, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x52, 0x0d, 0x72, 0x73, 0x70,
	0x4f, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x73, 0x22, 0xb2, 0x03, 0x0a, 0x1b, 0x43,
	0x61, 0x6c, 0x63, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x4f, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61,
	0x6c, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x75,
	0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x70, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x22,
	0xe1, 0x04, 0x0a, 0x1b, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x73, 0x70, 0x4f, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x70,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x5f, 0x76, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12,
	0x36, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x70, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x52, 0x03,
	0x74, 0x70, 0x6c, 0x22, 0x2c, 0x0a, 0x0f, 0x4d, 0x71, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4a, 0x73, 0x6f,
	0x6e, 0x22, 0x52, 0x0a, 0x10, 0x4d, 0x71, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xab,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x70, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x70, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x52, 0x03, 0x74, 0x70, 0x6c, 0x12,
	0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x70, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c,
	0x52, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x70, 0x6c, 0x22, 0x32, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c,
	0x42, 0x79, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x70, 0x69, 0x64, 0x73,
	0x22, 0x7a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x70, 0x6c, 0x42, 0x79, 0x50, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x42, 0x79,
	0x50, 0x69, 0x64, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c,
	0x42, 0x79, 0x50, 0x69, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x70,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x54, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x70, 0x6c, 0x52, 0x03, 0x74, 0x70, 0x6c, 0x22, 0x95, 0x06, 0x0a, 0x13, 0x54, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x70, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d,
	0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x53, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f,
	0x66, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x53, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x70, 0x6c, 0x5f, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x70, 0x6c, 0x53, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x70, 0x6c, 0x5f, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x70, 0x6c, 0x45, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x77,
	0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x11, 0x0a, 0x04, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x2a, 0x26, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x76,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x2a, 0x5e, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x32, 0x42, 0x10, 0x03, 0x32, 0x9b, 0x05, 0x0a, 0x0c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x53, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x53, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x08, 0x4d, 0x71, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x71, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x71, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70,
	0x6c, 0x12, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x42, 0x79, 0x50, 0x69, 0x64, 0x12, 0x23, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x70, 0x6c, 0x42, 0x79, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x70, 0x6c, 0x42, 0x79, 0x50, 0x69, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2a, 0x5a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0xca, 0x02, 0x1a, 0x61, 0x70, 0x70, 0x5c, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_order_order_proto_rawDescOnce sync.Once
	file_proto_order_order_proto_rawDescData = file_proto_order_order_proto_rawDesc
)

func file_proto_order_order_proto_rawDescGZIP() []byte {
	file_proto_order_order_proto_rawDescOnce.Do(func() {
		file_proto_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_order_order_proto_rawDescData)
	})
	return file_proto_order_order_proto_rawDescData
}

var file_proto_order_order_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_order_order_proto_goTypes = []interface{}{
	(CreateType)(0),                        // 0: order.CreateType
	(OrderType)(0),                         // 1: order.OrderType
	(*CreateExternalOrderRequest)(nil),     // 2: order.CreateExternalOrderRequest
	(*ProductInfo)(nil),                    // 3: order.ProductInfo
	(*ReceiveInfo)(nil),                    // 4: order.ReceiveInfo
	(*CreateExternalOrderResponse)(nil),    // 5: order.CreateExternalOrderResponse
	(*CancelOrderRequest)(nil),             // 6: order.CancelOrderRequest
	(*CancelOrderResponse)(nil),            // 7: order.CancelOrderResponse
	(*OrderSearchRequest)(nil),             // 8: order.OrderSearchRequest
	(*OrderSearchResponse)(nil),            // 9: order.OrderSearchResponse
	(*SvoucherExpireTimeRequest)(nil),      // 10: order.SvoucherExpireTimeRequest
	(*SvoucherExpireTimeResponse)(nil),     // 11: order.SvoucherExpireTimeResponse
	(*SvoucherExpireTimeResponseData)(nil), // 12: order.SvoucherExpireTimeResponseData
	(*CalcSettlePriceRequest)(nil),         // 13: order.CalcSettlePriceRequest
	(*CalcSettlePriceResponse)(nil),        // 14: order.CalcSettlePriceResponse
	(*CalcSettlePriceReqOitemAttr)(nil),    // 15: order.CalcSettlePriceReqOitemAttr
	(*CalcSettlePriceRspOitemAttr)(nil),    // 16: order.CalcSettlePriceRspOitemAttr
	(*MqNoticeRequest)(nil),                // 17: order.MqNoticeRequest
	(*MqNoticeResponse)(nil),               // 18: order.MqNoticeResponse
	(*GetCommissionTplRequest)(nil),        // 19: order.GetCommissionTplRequest
	(*GetCommissionTplResponse)(nil),       // 20: order.GetCommissionTplResponse
	(*GetCommissionTplByPidRequest)(nil),   // 21: order.GetCommissionTplByPidRequest
	(*GetCommissionTplByPidResponse)(nil),  // 22: order.GetCommissionTplByPidResponse
	(*GetCommissionTplByPidRow)(nil),       // 23: order.GetCommissionTplByPidRow
	(*TOrderCommissionTpl)(nil),            // 24: order.TOrderCommissionTpl
}
var file_proto_order_order_proto_depIdxs = []int32{
	4,  // 0: order.CreateExternalOrderRequest.receive_info:type_name -> order.ReceiveInfo
	3,  // 1: order.CreateExternalOrderRequest.product_infos:type_name -> order.ProductInfo
	0,  // 2: order.CreateExternalOrderRequest.create_type:type_name -> order.CreateType
	1,  // 3: order.OrderSearchRequest.order_type:type_name -> order.OrderType
	12, // 4: order.SvoucherExpireTimeResponse.data:type_name -> order.SvoucherExpireTimeResponseData
	15, // 5: order.CalcSettlePriceRequest.req_oitem_attrs:type_name -> order.CalcSettlePriceReqOitemAttr
	16, // 6: order.CalcSettlePriceResponse.rsp_oitem_attrs:type_name -> order.CalcSettlePriceRspOitemAttr
	24, // 7: order.CalcSettlePriceRspOitemAttr.tpl:type_name -> order.TOrderCommissionTpl
	24, // 8: order.GetCommissionTplResponse.tpl:type_name -> order.TOrderCommissionTpl
	24, // 9: order.GetCommissionTplResponse.default_tpl:type_name -> order.TOrderCommissionTpl
	23, // 10: order.GetCommissionTplByPidResponse.list:type_name -> order.GetCommissionTplByPidRow
	24, // 11: order.GetCommissionTplByPidRow.tpl:type_name -> order.TOrderCommissionTpl
	2,  // 12: order.OrderService.CreateExternalOrder:input_type -> order.CreateExternalOrderRequest
	6,  // 13: order.OrderService.CancelOrder:input_type -> order.CancelOrderRequest
	8,  // 14: order.OrderService.OrderSearch:input_type -> order.OrderSearchRequest
	10, // 15: order.OrderService.SvoucherExpireTime:input_type -> order.SvoucherExpireTimeRequest
	13, // 16: order.OrderService.CalcSettlePrice:input_type -> order.CalcSettlePriceRequest
	17, // 17: order.OrderService.MqNotice:input_type -> order.MqNoticeRequest
	19, // 18: order.OrderService.GetCommissionTpl:input_type -> order.GetCommissionTplRequest
	21, // 19: order.OrderService.GetCommissionTplByPid:input_type -> order.GetCommissionTplByPidRequest
	5,  // 20: order.OrderService.CreateExternalOrder:output_type -> order.CreateExternalOrderResponse
	7,  // 21: order.OrderService.CancelOrder:output_type -> order.CancelOrderResponse
	9,  // 22: order.OrderService.OrderSearch:output_type -> order.OrderSearchResponse
	11, // 23: order.OrderService.SvoucherExpireTime:output_type -> order.SvoucherExpireTimeResponse
	14, // 24: order.OrderService.CalcSettlePrice:output_type -> order.CalcSettlePriceResponse
	18, // 25: order.OrderService.MqNotice:output_type -> order.MqNoticeResponse
	20, // 26: order.OrderService.GetCommissionTpl:output_type -> order.GetCommissionTplResponse
	22, // 27: order.OrderService.GetCommissionTplByPid:output_type -> order.GetCommissionTplByPidResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_order_order_proto_init() }
func file_proto_order_order_proto_init() {
	if File_proto_order_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_order_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvoucherExpireTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvoucherExpireTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvoucherExpireTimeResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcSettlePriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcSettlePriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcSettlePriceReqOitemAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcSettlePriceRspOitemAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MqNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MqNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionTplRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionTplResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionTplByPidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionTplByPidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionTplByPidRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_order_order_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TOrderCommissionTpl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_order_order_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_order_order_proto_goTypes,
		DependencyIndexes: file_proto_order_order_proto_depIdxs,
		EnumInfos:         file_proto_order_order_proto_enumTypes,
		MessageInfos:      file_proto_order_order_proto_msgTypes,
	}.Build()
	File_proto_order_order_proto = out.File
	file_proto_order_order_proto_rawDesc = nil
	file_proto_order_order_proto_goTypes = nil
	file_proto_order_order_proto_depIdxs = nil
}
