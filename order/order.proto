syntax = "proto3";

package order;

option go_package    = "proto/order";
option php_namespace = "app\\components\\proto\\order";

// OrderService 订单服务
service OrderService {
    // CreateExternalOrder 创建外部订单
    rpc CreateExternalOrder(CreateExternalOrderRequest) returns (CreateExternalOrderResponse);

    // CancelOrder 取消订单（内部订单、外部订单）
    rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);

    // OrderSearch 订单搜索
    rpc OrderSearch(OrderSearchRequest) returns (OrderSearchResponse);

    // 获取佣金劵过期时间
    rpc SvoucherExpireTime(SvoucherExpireTimeRequest) returns (SvoucherExpireTimeResponse);

    // 计算结算佣金
    rpc CalcSettlePrice(CalcSettlePriceRequest) returns (CalcSettlePriceResponse);

    // Mq消息回调接口
    rpc MqNotice(MqNoticeRequest) returns (MqNoticeResponse);

    // 根据条件，获取佣金模板数据
    rpc GetCommissionTpl(GetCommissionTplRequest) returns (GetCommissionTplResponse);

    // 根据商品ID，获取对应的佣金模板
    rpc GetCommissionTplByPid(GetCommissionTplByPidRequest) returns (GetCommissionTplByPidResponse);

    // 计算满返奖励
    rpc CalcFullReturn(CalcFullReturnRequest) returns (CalcFullReturnResponse);

    // 根据order_item_id获取满返活动的奖励
    rpc GetFullReturnRewardFromOrderItemId(GetFullReturnRewardFromOrderItemIdRequest) returns (GetFullReturnRewardFromOrderItemIdResponse);

    // 计算mis配置的满返奖励
    rpc GetMisFullReturnConf(GetMisFullReturnConfRequest) returns (GetMisFullReturnConfResponse);

    // mis退款成功后,通知服务重新计算满返奖励(确认收货后的退款mis也会调,服务保证未发奖的前提下再发奖)
    rpc RefundSuccessMisNoticeForReCalcFullReturn(RefundSuccessMisNoticeForReCalcFullReturnRequest) returns (RefundSuccessMisNoticeForReCalcFullReturnResponse);
}

// CreateExternalOrderRequest 创建外部订单请求
message CreateExternalOrderRequest {
    string               extend              = 1;  // 扩展信息
    string               platform            = 2;  // 外部订单平台(对应字段t_order.order_frontend)
    int64                operator_id         = 3;  // 操作者ID
    int64                company_subject_id  = 4;  // 公司主体ID
    string               out_id              = 5;  // 外部订单号
    string               transaction_id      = 6;  // 可选。外部交易号，目前订单平台为淘宝时必填。
    ReceiveInfo          receive_info        = 7;  // 收货信息
    repeated ProductInfo product_infos       = 8;  // 商品信息列表
    CreateType           create_type         = 9;  // 创建订单类型。0普通，1超售
    bool                 not_check_live_room = 10;  // 可选值。false：默认校验直播房间；true：不校验直播房间。某些情况下开播异常导致匹配不到直播间商品
    string               ship_price          = 11;  // 可选值。订单运费。单位元，示例：123.01
    int32                operator_type       = 12;  // 操作者类型
}

// CreateType 创建订单类型
enum CreateType {
    Normal   = 0;  // 正常订单
    OverSale = 1;  // 超售订单
}
// ProductInfo 商品信息
message ProductInfo {
    int64  id                  = 1;  // 商品ID
    int64  activity_product_id = 2;  // 商品活动ID
    string discount_price      = 3;  // 商品折扣价。单位：元；格式：123.45
    string real_pay_price      = 4;  // 商品支付价。单位：元；格式：123.45
    string gift_name           = 5;  // 可选。赠品名称
}

// ReceiveInfo 收件信息
message ReceiveInfo {
    string user_name  = 1;  // 收货人姓名
    string phone      = 2;  // 联系电话
    string province   = 3;  // 省
    string city       = 4;  // 市
    string town       = 5;  // 区
    string detail     = 6;  // 详细地址
    string express_no = 8;  // 可选。快递单号
    // 以下四个字段最终保存到t_order_address中
    string encrypt_post_receiver = 9;  // 加密收货人
    string encrypt_post_tel      = 10;  // 加密手机号
    string encrypt_detail        = 11;  // 加密详细地址
    string phone_key             = 12;  // 抖音手机号索引串
}

// CreateExternalOrderResponse 创建外场订单响应
message CreateExternalOrderResponse {
    int64  code     = 1;
    string msg      = 2;
    int64  order_id = 3;  // 红布林订单ID
}

// CancelOrderRequest 取消订单请求
message CancelOrderRequest {
    string extend      = 1;  // 扩展信息（预留）
    string source      = 2;  // 订单来源。内部、外部。TODO: 枚举值
    int64  operator_id = 3;  // 操作者ID（用户ID或者后台ID）
    int64  order_id    = 4;  // 订单ID
}

// CancelOrderResponse 取消订单响应
message CancelOrderResponse {
    int64  code = 1;
    string msg  = 2;
}

enum OrderType {
    ORDER_TYPE_NON    = 0;  // 无
    ORDER_TYPE_ALL    = 1;  // 全部订单
    ORDER_TYPE_NORMAL = 2;  // 普通订单
    ORDER_TYPE_B2B    = 3;  // b2b订单
}

message OrderSearchRequest {
    int32     page       = 1;
    int32     size       = 2;
    int32     user_id    = 3;  // 用户ID
    string    keyword    = 4;  //搜索关键词
    OrderType order_type = 5;  // 订单类型
}

message OrderSearchResponse {
    int64          code     = 1;
    string         msg      = 2;
    repeated int32 order_id = 3;
}

// SvoucherExpireTimeRequest 获取佣金劵过期时间-请求参数
message SvoucherExpireTimeRequest {
    repeated int64 user_voucher_ids = 1;  // 用户优惠券ID
    int64          cache_time       = 2;  // 缓存时间，默认不缓存(非必传)
    string         business_module  = 3;  // 业务模块：www、mis、zzapi(非必传)
}

message SvoucherExpireTimeResponse {
    int64                                   code = 1;
    string                                  msg  = 2;
    repeated SvoucherExpireTimeResponseData data = 3;
}

message SvoucherExpireTimeResponseData {
    int64  user_voucher_id        = 1;  // 用户优惠券ID
    int64  sold_days              = 2;  // 绑劵后过期天数(原始值)
    int64  on_sale_days           = 3;  // 在售天数
    int64  commit_time            = 4;  // 提交商品日期
    int64  mail_time              = 5;  // 寄出商品日期
    int64  start_time             = 6;  // 快要过期的起始计算时间(有订单则是下单时间，没有则是当前时间)
    int64  coupon_redemption_time = 7;  // 领劵日期
    int64  calc_expire_time       = 8;  // 佣金劵过期剩余天数(以该值为准，该字段用于计算，其他字段均用来展示)
    string calc_expire_date       = 9;  // 佣金劵过期日期，格式：YYYY-mm-dd H:i:s
}

/**
 * 计算结算佣金
 * @desc 该接口只负责计算，没有写操作，支持批量；
 * @desc 注意字段命名，最好与t_order_item表一致，属性值最好都复制表属性；
*/
message CalcSettlePriceRequest {
    repeated CalcSettlePriceReqOitemAttr req_oitem_attrs = 1;  // 订单商品信息
    string                               business_module = 2;  // 业务模块：www、mis(非必传)
}

message CalcSettlePriceResponse {
    int64                                code            = 1;
    string                               msg             = 2;
    repeated CalcSettlePriceRspOitemAttr rsp_oitem_attrs = 3;  // 订单商品信息
}

message CalcSettlePriceReqOitemAttr {
    int64  id                = 1;  // 订单商品表ID
    int64  order_id          = 2;  // 订单ID
    int64  product_id        = 3;  // 老品商品ID
    int64  spu_id            = 4;  // 新品spu_id
    int64  sku_id            = 5;  // 新品sku_id
    string discount_price    = 6;  // 折扣价格
    string realpay_price     = 7;  // 商品支付金额
    string settle_base_price = 8;  // 结算基础价（除了平台定价依赖www，其他定价类型，该值可以为0）
    string fulloff_benefit   = 9;  // 满减优惠金额（非必填）
    string further_discount  = 10;  // 满折优惠金额（非必填）
    int64  commission_tpl_id = 11;  // 绑定过的模板（非必填）
    string activity_json     = 12;  // 下单时商品参加的活动信息，仅用来记录（非必填）
}

message CalcSettlePriceRspOitemAttr {
    int64  id                          = 1;  // 订单商品ID
    int64  commission_tpl_id           = 2;  // 绑定的模板ID
    string settle_base_price           = 3;  // 修改后的结算基础价
    string seller_voucher_applying_fee = 4;  // 优惠券提报活动优惠金额
    string s_voucher_commission        = 5;  // 佣金劵抵扣的金额
    string commission_fee              = 6;  // 平台收取佣金金额
    string settle_commission_ratio     = 7;  // 佣金费率
    string deduction_appraisal_fee     = 8;  // 鉴定费金额
    string deduction_transfer_fee      = 9;  // 转账手续费金额
    string settle_price                = 10;  // 结算给卖家的金额
    int64  product_id                  = 11;  // 商品ID
    int64  spu_id                      = 12;  // spuID
    int64  sku_id                      = 13;  // skuID
    TOrderCommissionTpl tpl            = 14;  // 佣金模板数据
}

// MqNoticeRequest 消息回调参数
message MqNoticeRequest {
    string msg_json = 1;  // 消息json格式
}

// MqNoticeResponse 消息回答响应
message MqNoticeResponse {
    int64           code    = 1;
    string          msg     = 2;
    repeated string success = 3;
}

// 提交商品前，根据条件匹配佣金模板
message GetCommissionTplRequest {
    int64   brand_id            = 1;  // 品牌ID
    int64   category_id         = 2;  // 类目ID
    int64   seller_id           = 3;  // 卖家ID
    int64   product_commit_time = 4;  // 卖家商品创建时间(非必填)
    string  dispatch_type       = 5;  // 寄卖方式：plum入仓模式、seller挂售(非必填)
    int64   product_id          = 6;  // 商品ID(非必填)
}
message GetCommissionTplResponse {
    int64           code    = 1;
    string          msg     = 2;
    TOrderCommissionTpl tpl = 3;            // 模板信息
    TOrderCommissionTpl default_tpl = 4;    // 匹配不到模板时，使用的参数
}

// 获取商品ID，获取对应的佣金模板
message GetCommissionTplByPidRequest {
    repeated int64   pids     = 1;  // 商品ID
}
message GetCommissionTplByPidResponse {
    int64           code    = 1;
    string          msg     = 2;
    repeated GetCommissionTplByPidRow list = 3;
}
message GetCommissionTplByPidRow {
    int64               pid = 1;    // 商品ID
    TOrderCommissionTpl tpl = 2;    // 模板信息
}
message TOrderCommissionTpl {
    int32 id = 1;
    string tpl_name = 2;
    float platform_ratio = 3;
    float min_fee = 4;
    int32 min_fee_stime = 5;
    float max_fee = 6;
    int32 max_fee_stime = 7;
    float transfer_fee_ratio = 8;
    float appraisal_fee = 9;
    int32 tpl_stime = 10;
    int32 tpl_etime = 11;
    string remark = 12;
    int32 create_time = 13;
    string brand_list = 14;
    string category_list = 15;
    string seller_id_list = 16;
    string product_id_list = 17;
    string dispatch_type = 18;
    float low_selling_price = 19;
    float low_reseller_price = 20;
    int32 level = 21;
    int32 g_id = 22;
    string g_status = 23;
    string g_image = 24;
}

message CalcFullReturnRequest {
    repeated FullReturnInfo full_return_info = 1;
}

message FullReturnInfo {
    int64                          group_id = 1;
    int64                          conf_id  = 2;  //仅记录用,服务端不用该值
    repeated FullReturnProductInfo products = 3;  // 商品
}

message FullReturnProductInfo {
    int64 product_id = 1;
    int64 price      = 2;  // 金额分
}

message CalcFullReturnResponse {
    int64                     code   = 1;
    string                    msg    = 2;
    CalculateFullReturnResult result = 3;
}

message CalculateFullReturnResult {
    repeated FullReturnConf full_return_conf = 1;
}

enum FullReturnType {
    FULL_RETURN_TYPE_NONE    = 0;
    FULL_RETURN_TYPE_EVERY   = 1;  // 每满返
    FULL_RETURN_TYPE_BY_STEP = 2;  // 阶梯满返
}

enum FullReturnRewardType {
    FULL_RETURN_REWARD_TYPE_NONE     = 0;
    FULL_RETURN_REWARD_TYPE_VOUCHER  = 1;  // 优惠券
    FULL_RETURN_REWARD_TYPE_RED_BEAN = 2;  // 红豆
    FULL_RETURN_REWARD_TYPE_RED_BAG  = 3;  // 红包
}
message FullReturnConf {
    int64                                 group_id              = 1;
    FullReturnType                        type                  = 2;      // 满返类型
    int64                                 total_benefit         = 3;      // 总优惠金额 单位:分
    repeated ProductPriceAverage          product_price_average = 4;      // 商品价格分摊
    repeated FullReturnConfTypeDetail     conf_detail           = 5;      // 满返配置(每满返只有一条记录,阶梯满返配置 按照门槛从低到高排序)
    string                                cart_tip              = 6;      // 购物车文案
    string                                rule_text             = 7;      // 活动规则文案
}

// FullReturnConfTypeDetail  满返配置
message FullReturnConfTypeDetail {
    int64                condition    = 1;  // 门槛金额 单位:分
    int64                benefit      = 2;  // 返 单位分
    bool                 matched      = 3;  // 是否匹配阶梯 只返回命中的阶梯
    FullReturnRewardType reward_type  = 4;  // 奖励类型
    int64                reward_id    = 5;  // 奖励id
    int64                reward_value = 6;  // 奖励值
}

message ProductPriceAverage {
    int64 product_id    = 1;  // 商品id
    int64 price         = 2;  // 金额分
    int64 benefit_price = 3;  // 优惠的金额 单位:分
}

message GetFullReturnRewardFromOrderItemIdRequest {
    int64 order_item_id = 1;
}
message GetFullReturnRewardFromOrderItemIdResponse {
    int64                                    code   = 1;  // 200代表成功; 非200代表失败
    string                                   msg    = 2;
    int64                                    joined = 3;  // 商品是否参加满返活动 0默认; 1参加; 2不参加 (当不参加时 result字段无值,无意义)
    GetFullReturnRewardFromOrderItemIdResult result = 4;
}
message GetFullReturnRewardFromOrderItemIdResult {
    int64 conf_id       = 1;  // 配置配置id
    string conf_name    = 2;  // 活动配置name
    int64 reward_type   = 3;  // oid所在满返的奖励类型 ( mis配置 )
    int64 reward_id     = 4;  // oid所在满返的奖励id ( mis配置 )
    int64 reward_value  = 5;  // oid所在满返的奖励value ( mis配置 )
    int64 reward_status = 6;  // oid所在满返的奖励状态 0: 默认 1: 未发奖 2: 已发奖励 3: 奖励已取消
    int64 benefit       = 7;  // 分摊的优惠金额,!!!单位分!!!
    int64 rewarded_time = 8;  // 到账时间
}

message GetMisFullReturnConfRequest {
    repeated int64 group_id = 1;
}
message GetMisFullReturnConfResponse {
    int64                                           code = 1;
    string                                          msg = 2;
    map<int64, MisFullReturnConfItem>               result = 3; // key: group_id
}
message MisFullReturnConfItem {
    int64                                 group_id     = 1;  // 满返组id,也作为map的key
    FullReturnType                        type         = 2;  // 满返类型
    repeated FullReturnConfTypeDetail     conf_detail  = 3;  // 满返配置(每满返只有一条记录,阶梯满返配置 按照门槛从低到高排序)
    string                                cart_tip     = 4;  // 购物车文案
    string                                rule_text    = 5;  // 活动规则文案
}

message RefundSuccessMisNoticeForReCalcFullReturnRequest {
    int64 order_id = 1;
}
message RefundSuccessMisNoticeForReCalcFullReturnResponse {
    int64     code   = 1;
    string    msg    = 2;
}